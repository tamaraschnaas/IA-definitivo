import numpy as np
import matplotlib.pyplot as plt

# Simulation parameters
T = 50  # tiempo en unidades (p.ej., meses)
time = np.arange(T)

# Parámetros de degradación y regeneración
deg_rate = 1.5            # tasa de degradación sin intervención
regen_reduction = 2.0     # reducción de degradación con huertos
om_gain_rate = 0.5        # ganancia de materia orgánica con huertos
moisture_gain_rate = 0.4  # ganancia de humedad con huertos
prod_gain_rate = 0.3      # ganancia de productividad con huertos

# Estado inicial (0 = buen suelo, 100 = suelo destruido)
degradation_baseline = np.zeros(T)
degradation_regen = np.zeros(T)
om_baseline = np.full(T, 5.0)    # % de materia orgánica inicial
om_regen = np.full(T, 5.0)
moisture_baseline = np.full(T, 20.0)  # % de humedad inicial
moisture_regen = np.full(T, 20.0)
prod_baseline = np.full(T, 50.0)      # productividad inicial (índice)
prod_regen = np.full(T, 50.0)

# Simulación
for t in range(1, T):
    # Sin intervención
    degradation_baseline[t] = degradation_baseline[t-1] + deg_rate
    om_baseline[t] = max(om_baseline[t-1] - 0.1, 0)
    moisture_baseline[t] = max(moisture_baseline[t-1] - 0.2, 0)
    prod_baseline[t] = max(prod_baseline[t-1] - 0.5, 0)
    
    # Con huertos regenerativos
    degradation_regen[t] = max(degradation_regen[t-1] + deg_rate - regen_reduction, 0)
    om_regen[t] = om_regen[t-1] + om_gain_rate
    moisture_regen[t] = moisture_regen[t-1] + moisture_gain_rate
    prod_regen[t] = prod_regen[t-1] + prod_gain_rate

# Gráficas
metrics = [
    ("Nivel de degradación", degradation_baseline, degradation_regen, "Unidad"),
    ("Materia orgánica (%)", om_baseline, om_regen, "%"),
    ("Humedad retenida (%)", moisture_baseline, moisture_regen, "%"),
    ("Productividad del suelo (índice)", prod_baseline, prod_regen, "Unidad")
]

for title, base, regen, ylabel in metrics:
    plt.figure()
    plt.plot(time, base, label="Sin intervención")
    plt.plot(time, regen, label="Con huertos regenerativos")
    plt.title(title)
    plt.xlabel("Tiempo (unidades)")
    plt.ylabel(ylabel)
    plt.legend()
    plt.tight_layout()
    plt.show()
